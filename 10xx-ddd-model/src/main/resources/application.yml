server:
  port: 9444
#  tomcat:
#    #如下配置是根据4核8G内存单进程服务器配置
#    #等待队列长度,默认100（队列也做缓冲池用，但也不能无限长， 不但消耗内存，而且出队入队也消耗CPU）
#    accept-count: 1000  #最大的等待数
#     #tomcat默认最大线程数为200   具体根据服务器配置调整
#    max-threads: 400
#    #最大连接数
#    max-connections: 10000
#    # 最小工作空闲线程数，默认10。（适当增大一些，以便应对突然增长的访问量）
#    min-spare-threads: 100
## 可以配置api-url ribbon，对以上的服3务进行负载均衡
#ribbon:
#  okhttp:
#    enabled: true

spring:
  redis:
    host: 139.159.228.191
    port: 6377
    password: j4kd4ng3s8f3
    database: 0
    jedis:
      pool:
        max-active: 1000
        max-idle: 100
        min-idle: 8
        max-wait: 3000ms
    timeout: 10000ms
#  redis:
#    host: 192.168.88.200
#    port: 5001
#    password:
  jpa:
    hibernate:
      use-new-id-generator-mappings: false

#  cloud:
#    stream:
#      kafka:
#        binder:
##          brokers: 192.168.25.118:9092
##          zk-nodes: 192.168.25.118:2182
#          brokers: localhost:9092
#          zk-nodes: localhost:2182
#
#      bindings:
#          bpm_active_input:
#            destination: eam.bpm
#          common-message-center:
#            destination: common-message-center
#          message.queue.asset.synchronization:
##            group:
#            destination: message.queue.asset.synchronization
#
#    # 增加动态修改熔断规则支持
#    sentinel:
#      eager: true
#      datasource:
#        #       熔断配置
#        ds1:
#          apollo:
#            namespaceName: application
#            flowRulesKey: degrade-rules
#            dataType: json
#            ruleType: DEGRADE
##zuul:
#  # 此参数设置忽略哪些服务，如果是*，则忽略所有服务
#  # ignoredServices: '*'
#  # 此参数可以设置忽略以下的请求
#  # ignoredPatterns: /**/admin/**
##  routes:
##    2021_saaf-base-server: /userCenter/**
##  routes:
##    # 如果没有配置路由，则zuul默认已经自动配置类似的关系："/cloud-services-zuul/**":"cloud-services-zuul"
##    # 访问http://127.0.0.1:14601/cloud-services-zuul/zuul-test/simple，等价于 http://127.0.0.1:14606/zuul-test/simple
##    # 此名称任意
##    api-url:
##      # 通过url直接映射
##      # 所有到Zuul的中规则为：/api-a-url/**的访问都映射到http://127.0.0.1:14606/上，
##      # 也就是说当我们访问http://127.0.0.1:14601/api-a-url/zuul-test/simple的时候，Zuul会将该请求路由到：http://127.0.0.1:14606/zuul-test/simple
##      path: /user-center/**
##      # 对于url映射不是通过HystrixCommand执行，也不能通过ribbon进行负载，需要进行额外配置，详细见spring 文档
##      url: http://127.0.0.1:14606/
##    # 此名称任意
##    api-application-name:
##      # 服务名与服务实例地址的关系： 即 http://127.0.0.1:14601//api-a//zuul-test/simple 等介于 http://127.0.0.1:14606/zuul-test/simple
##      path: /user-center/**
##      url: user-center
##    # 此名称任意
##    api-strip-prefix:
##      # http://127.0.0.1:14601/zuul-test/simple 等介于 http://127.0.0.1:14606/zuul-test/simple
##      # 路径请不要使用/zuul测试，这是zuul自己使用的
##      path: /zuul-test/**
##      url: cloud-services-zuul
##      # 默认值为true，如果设置为false，则重定向时，访问的新的URL，不删除path部分的前缀
##      stripPrefix: false
#
#
database:
  ts_max_intervals: "${DATABASE_TS_MAX_INTERVALS:700}" # Max number of DB queries generated by single API call to fetch telemetry records
  entities:
    type: "${DATABASE_ENTITIES_TYPE:sql}" # cassandra OR sql
  ts:
    type: "${DATABASE_TS_TYPE:cassandra}" # cassandra OR sql (for hybrid mode, only this value should be cassandra)

#
## Cassandra driver configuration parameters
#cassandra:
#  # Thingsboard cluster name
#  cluster_name: "${CASSANDRA_CLUSTER_NAME:Thingsboard Cluster}"
#  # Thingsboard keyspace name
#  keyspace_name: "${CASSANDRA_KEYSPACE_NAME:sie_iot_dev}"
#  # Specify node list
#  url: "${CASSANDRA_URL:139.9.147.53:9042}"
#  # Enable/disable secure connection
#  ssl: "${CASSANDRA_USE_SSL:false}"
#  # Enable/disable JMX
#  jmx: "${CASSANDRA_USE_JMX:true}"
#  # Enable/disable metrics collection.
#  metrics: "${CASSANDRA_DISABLE_METRICS:true}"
#  # NONE SNAPPY LZ4
#  compression: "${CASSANDRA_COMPRESSION:none}"
#  # Specify cassandra cluster initialization timeout in milliseconds (if no hosts available during startup)
#  init_timeout_ms: "${CASSANDRA_CLUSTER_INIT_TIMEOUT_MS:300000}"
#  # Specify cassandra claster initialization retry interval (if no hosts available during startup)
#  init_retry_interval_ms: "${CASSANDRA_CLUSTER_INIT_RETRY_INTERVAL_MS:3000}"
#  max_requests_per_connection_local: "${CASSANDRA_MAX_REQUESTS_PER_CONNECTION_LOCAL:32768}"
#  max_requests_per_connection_remote: "${CASSANDRA_MAX_REQUESTS_PER_CONNECTION_REMOTE:32768}"
#  # Credential parameters #
#  credentials: "${CASSANDRA_USE_CREDENTIALS:true}"
#  # Specify your username
#  username: "${CASSANDRA_USERNAME:}"
#  # Specify your password
#  password: "${CASSANDRA_PASSWORD:}"
#
#  # Cassandra cluster connection socket parameters #
#  socket:
#    connect_timeout: "${CASSANDRA_SOCKET_TIMEOUT:5000}"
#    read_timeout: "${CASSANDRA_SOCKET_READ_TIMEOUT:20000}"
#    keep_alive: "${CASSANDRA_SOCKET_KEEP_ALIVE:true}"
#    reuse_address: "${CASSANDRA_SOCKET_REUSE_ADDRESS:true}"
#    so_linger: "${CASSANDRA_SOCKET_SO_LINGER:}"
#    tcp_no_delay: "${CASSANDRA_SOCKET_TCP_NO_DELAY:false}"
#    receive_buffer_size: "${CASSANDRA_SOCKET_RECEIVE_BUFFER_SIZE:}"
#    send_buffer_size: "${CASSANDRA_SOCKET_SEND_BUFFER_SIZE:}"
#
#  # Cassandra cluster connection query parameters  #
#  query:
#    read_consistency_level: "${CASSANDRA_READ_CONSISTENCY_LEVEL:ONE}"
#    write_consistency_level: "${CASSANDRA_WRITE_CONSISTENCY_LEVEL:ONE}"
#    default_fetch_size: "${CASSANDRA_DEFAULT_FETCH_SIZE:2000}"
#    # Specify partitioning size for timestamp key-value storage. Example MINUTES, HOURS, DAYS, MONTHS,INDEFINITE
#    ts_key_value_partitioning: "${TS_KV_PARTITIONING:MONTHS}"
#    ts_key_value_ttl: "${TS_KV_TTL:0}"
#    events_ttl: "${TS_EVENTS_TTL:0}"
#    buffer_size: "${CASSANDRA_QUERY_BUFFER_SIZE:200000}"
#    concurrent_limit: "${CASSANDRA_QUERY_CONCURRENT_LIMIT:1000}"
#    permit_max_wait_time: "${PERMIT_MAX_WAIT_TIME:120000}"
#    dispatcher_threads: "${CASSANDRA_QUERY_DISPATCHER_THREADS:2}"
#    callback_threads: "${CASSANDRA_QUERY_CALLBACK_THREADS:4}"
#    poll_ms: "${CASSANDRA_QUERY_POLL_MS:50}"
#    rate_limit_print_interval_ms: "${CASSANDRA_QUERY_RATE_LIMIT_PRINT_MS:10000}"
#    tenant_rate_limits:
#      enabled: "${CASSANDRA_QUERY_TENANT_RATE_LIMITS_ENABLED:false}"
#      configuration: "${CASSANDRA_QUERY_TENANT_RATE_LIMITS_CONFIGURATION:1000:1,30000:60}"
#      print_tenant_names: "${CASSANDRA_QUERY_TENANT_RATE_LIMITS_PRINT_TENANT_NAMES:false}"
#
## SQL configuration parameters
sql:
  # Specify executor service type used to perform timeseries insert tasks: SINGLE FIXED CACHED
  ts_inserts_executor_type: "${SQL_TS_INSERTS_EXECUTOR_TYPE:fixed}"
  # Specify thread pool size for FIXED executor service type
  ts_inserts_fixed_thread_pool_size: "${SQL_TS_INSERTS_FIXED_THREAD_POOL_SIZE:10}"

#
#kafka:
#  enabled: true
#  bootstrap.servers: "${TB_KAFKA_SERVERS:localhost:9092}"
##  bootstrap.servers: "${TB_KAFKA_SERVERS:192.168.25.118:9092}"
#  acks: "${TB_KAFKA_ACKS:all}"
#  retries: "${TB_KAFKA_RETRIES:1}"
#  batch.size: "${TB_KAFKA_BATCH_SIZE:16384}"
#  linger.ms: "${TB_KAFKA_LINGER_MS:1}"
#  buffer.memory: "${TB_BUFFER_MEMORY:33554432}"
#  transport_api:
#    requests_topic: "${TB_TRANSPORT_API_REQUEST_TOPIC:tb.transport.api.requests}"
#    responses_topic: "${TB_TRANSPORT_API_RESPONSE_TOPIC:tb.transport.api.responses}"
#    max_pending_requests: "${TB_TRANSPORT_MAX_PENDING_REQUESTS:10000}"
#    max_requests_timeout: "${TB_TRANSPORT_MAX_REQUEST_TIMEOUT:10000}"
#    response_poll_interval: "${TB_TRANSPORT_RESPONSE_POLL_INTERVAL_MS:25}"
#    response_auto_commit_interval: "${TB_TRANSPORT_RESPONSE_AUTO_COMMIT_INTERVAL_MS:100}"
#  rule_engine:
#    topic: "${TB_RULE_ENGINE_TOPIC:tb.rule-engine}"
#  notifications:
#    topic: "${TB_TRANSPORT_NOTIFICATIONS_TOPIC:tb.transport.notifications}"
#    poll_interval: "${TB_TRANSPORT_NOTIFICATIONS_POLL_INTERVAL_MS:25}"
#    auto_commit_interval: "${TB_TRANSPORT_NOTIFICATIONS_AUTO_COMMIT_INTERVAL_MS:100}"
